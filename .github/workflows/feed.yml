name: Refresh Content In README 📖

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-feed:
    name: Update RSS Feed 📖
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛒
        uses: actions/checkout@v3

      - name: Set up Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Fetch RSS Feed 🐍
        id: fetch-rss
        run: |
          curl -s https://jamesiv.es/feeds/rss.xml -o rss.xml

      - name: Parse RSS Feed and Update README 📖
        id: update-readme
        run: |
          python3 -c """
          import xml.etree.ElementTree as ET
          import re
          from datetime import datetime

          # Parse the RSS feed
          rss_tree = ET.parse('rss.xml')
          root = rss_tree.getroot()

          # Extract the last 3 items
          items = root.findall('.//item')[:3]

          # Format the items with the new template
          feed_content = ''
          for item in items:
              title = item.find('title').text
              link = item.find('link').text
              pub_date = item.find('pubDate').text
              formatted_date = datetime.strptime(pub_date, '%a, %d %b %Y %H:%M:%S %Z').strftime('%B %d, %Y')
              feed_content += f'[{title}]({link})\n> <sup>{formatted_date}</sup>\n\n'

          # Read the README file
          with open('README.md', 'r') as file:
              readme_content = file.read()

          # Replace the placeholder with the feed content, ensuring it refreshes every time
          updated_content = re.sub(r'<!--feed-->[\s\S]*?<!--feed-->', f'<!--feed-->\n{feed_content}<!--feed-->', readme_content)

          # Write the updated content back to the README file
          with open('README.md', 'w') as file:
              file.write(updated_content)
          """

      - name: Clean up RSS file 🧹
        run: |
          rm rss.xml

      - name: Exit Gracefully If No Changes 🚪
        run: |
          if git diff --quiet; then
            echo "No changes to commit. Exiting gracefully."
            exit 0
          fi

      - name: Commit and Push Changes 📣
        continue-on-error: true
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore(rss): update RSS feed in README"
          git push origin main
